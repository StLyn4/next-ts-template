{
  "plugins": ["eslint-plugin-import", "react", "jsx-a11y"],
  "extends": [
    "plugin:import/recommended",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "next/core-web-vitals",
    "google"
  ],
  "settings": {
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "valid-jsdoc": "off",
    "linebreak-style": ["error", "unix"],
    "eol-last": ["error", "always"],
    "comma-dangle": "error",
    "curly": ["error", "all"],
    "object-curly-spacing": ["error", "always"],
    "jsx-quotes": ["error", "prefer-double"],
    "quotes": ["error", "single"],
    "no-console": "error",
    "no-debugger": "error",
    "no-eval": "error",
    "no-return-await": "error",
    "no-implicit-coercion": "error",
    "no-underscore-dangle": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 1,
        "maxBOF": 0
      }
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 2,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": ["/"]
      }
    ],
    "operator-linebreak": [
      "error",
      "after",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "react/button-has-type": "error",
    "react/hook-use-state": "error",
    "react/iframe-missing-sandbox": "error",
    "react/prefer-stateless-function": "error",
    "react/no-unstable-nested-components": "error",
    "react/react-in-jsx-scope": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-closing-bracket-location": ["error", "line-aligned"],
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/jsx-fragments": ["error", "syntax"],
    "react/jsx-indent": ["error", 2],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 1,
        "when": "multiline"
      }
    ],
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "parens-new-line"
      }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/forbid-elements": [
      "error",
      {
        "forbid": [
          {
            "element": "button",
            "message": "use <Button> instead"
          },
          {
            "element": "input",
            "message": "use <Input> / <Checkbox> instead"
          },
          {
            "element": "textarea",
            "message": "use <Input type=\"textarea\"> instead"
          }
        ]
      }
    ],
    "import/first": "error",
    "import/no-self-import": "error",
    "import/no-absolute-path": "error",
    "import/no-anonymous-default-export": "off",
    "import/no-useless-path-segments": [
      "error",
      {
        "noUselessIndex": true
      }
    ],
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", ["index", "sibling"], "parent", "object", "type"],
        "newlines-between": "always",
        "warnOnUnassignedImports": true,
        "pathGroups": [
          {
            "pattern": "app/components/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "app/lib/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "app/redux/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "app/styles/**",
            "group": "index",
            "position": "before"
          },
          {
            "pattern": "app/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "root/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "assets/**",
            "group": "external",
            "position": "after"
          }
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.js", "*.mjs", "*.cjs", "*.jsx"],
      "rules": {
        "valid-jsdoc": "error"
      }
    },
    {
      "files": ["*.ts", "*.mts", "*.cts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "sourceType": "module",
        "project": "tsconfig.json",
        "tsconfigRootDir": "./"
      },
      "plugins": ["eslint-plugin-tsdoc", "@typescript-eslint"],
      "extends": [
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "rules": {
        "tsdoc/syntax": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ]
      }
    },
    {
      "files": ["./src/pages/api/**/*.js", "./src/pages/api/**/*.ts"],
      "rules": {
        "no-console": "off"
      }
    }
  ]
}
